Create a folder for the project(RealtimePizza)
    - Inside the folder -> npm init -y
Create a public folder
    Inside public 
        - css -> app.css
        - js -> app.js
        - img
Create a app folder
     Inside app
        - http folder
            - controllers folder
            - middlewares folder
        - models folder
        - config folder
Create resources folder
    Inside resources
        - js -> app.js
        - scss -> app.scss
    Note : Here we write our css,js and it is compliles and save in public css,js file and this public comiles css,js will be included in main project
        - views
Create a routes folder
    Inside routes
        - web.js
        - api.js
Install the required packages
    - npm i express express-ejs-layouts ejs
    - npm i nodemon -D  
Create a server.js file
    - server.js
        const express=require('express');
        const app=express();
        const PORT=process.env.PORT || 3000
        app.listen(PORT,()=>console.log(`Listening to Port ${PORT}`))
    - package.json
        "scripts": {
            "serve":"node server.js",
            "dev": "nodemon server"
        }
    - npm run dev
Set the template engine to ejs and construct the path for home page view
    - server.js
        const expressLayout=require('express-ejs-layouts');
        const ejs=require('ejs')
        const path=require('path');
        app.get('/',(req,res)=>{
            res.render('home');
        })
        //set template engine
        app.use(expressLayout)
        app.set('views',path.join(__dirname,'/resources/views'))
        app.set('view engine','ejs');
    - resources/views/home.ejs
        <h1>Hello from HomePage</h1>
Setting Git repository
    - git init
    - git status
    - git add .
    - git commit -m "Initial"
    - git push
Install Laravel Mix for standalone project
    - npm i laravel-mix -D
    - In root create a file -> webpack.mix.js
        const mix=require('laravel-mix');
        mix.js('resources/js/app.js','public/js/app.js').sass('resources/scss/app.scss','public/css/app.css')
    - Now change resources/js/app.js
        console.log("Hello from app.js")
    - Compile the js,css using command
        - npx mix
    - Now we can check the compliled files under public/js/app.js
    - Modify server.js to inform that the default folder for assets will be inside public folder
        //Assets
        app.use(express.static('public'));
    - Modify resources/views/home.ejs and include the compliled css,js 
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta http-equiv="X-UA-Compatible" content="IE=edge">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <link rel="stylesheet" href="css/app.css">
            <title>Realtime Pizza Tracker</title>
        </head>
        <body>
            <h1>Hello from HomePage</h1>
            <script src="js/app.js"></script>
        </body>
        </html>
    - Include the talwind css cdn to use it.
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css">
-------------------------------------------------------
 Include a partial file _variables.scss to include all the common variables we will use within our project
    - _variables.scss
        //colors
        $primary:#FE5F1E;
        $primary-hover:#b23301;
        $secondary:#F8F8F8;
        $pure:#FFF;
        $dark:#232323;
        $gray:#ccc;
    - app.scss
        @import './variables';

